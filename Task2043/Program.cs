using System;
using System.Text;

namespace Task2043
{
    /*Назовем открывающим тегом строку <x>, где x — любая строчная буква латинского алфивита. Каждому открывающему тегу соответствует 
    закрывающий тег вида </x>, где x — та же самая буква.
    Теги могут вкладываться друг в друга: в этому случае одна пара из открывающего и закрывающего тега находится внутри другой пары.
    Определим понятие XML-текста:
    пустая строка — это XML-текст
    если s — это XML-текст, то s' = <a> + s + </a> — тоже XML-текст, где a — любая строчная буква латинского алфавита
    если s1, s2 — это XML-тексты, то s1 + s2 — тоже XML-текст

    Вам дан XML-текст (гарантируется, что он корректен), ваша задача — вывести его в формате:
    каждый тег (как открывающий, так и закрывающий) находится на отдельной строке
    перед тегом выводится 2*h пробелов, где h — уровень вложенности тега.
    Входные данные
    Входные данные состоят из единственной строки — XML-текста, его длина не превосходит 1000 символов. Гарантируется корректность этого текста.
    Выходные данные
    Выведите данный XML-текст в соответствии с описанными выше правилами.*/
    class Program
    {
        static void Main(string[] args)
        {
            StringBuilder xml = new StringBuilder("");
            StringBuilder answer = new StringBuilder("");
            string input = Console.ReadLine();
            xml.Append(input);
            int level = 1;
            for(int i = 0; i < xml.Length; i++)
            {
                answer.Append(xml[i]);
                if(xml[i] == '>' && i < xml.Length - 2 && xml[i + 2] != '/')
                {                    
                    answer.Append("\n");
                    answer.Append(' ', 2 * level);
                    level++;
                }
                else if(xml[i] == '>' && i < xml.Length - 2 && xml[i + 2] == '/')
                {
                    level--;
                    answer.Append("\n");
                    answer.Append(' ', 2 * level);
                }
            }
            Console.WriteLine(answer);
            //Console.ReadKey();
        }
    }
}
